package main;

import homePage.SearchResultPage;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.ImageIcon;
import javax.swing.JFrame;

import profilePage.DataProfileManager;
import profilePage.ProfileFrame;

import common.BotInfoPanel;
import common.TopInfoPanel;

public class NinjaFrame extends JFrame {

	private static final int SIZE_Y = 720;
	private static final int SIZE_X = 1366;
	private static final String TITLE_LABEL = "SOFTWARE NINJAS";
	
	private BotInfoPanel botP;
	private TopInfoPanel topP;
	private SearchResultPage sCenterP;
	private ProfileFrame profile;
	public static final Cursor handCursor = new Cursor(Cursor.HAND_CURSOR);
	public static final Cursor defaultCursor = new Cursor(Cursor.DEFAULT_CURSOR);

	/**
	 * Constructor method of the parent of my componetns
	 */
	public NinjaFrame() {

		profile = new ProfileFrame();
		botP = new BotInfoPanel();
		sCenterP = new SearchResultPage();
		topP = new TopInfoPanel(this, sCenterP);
		this.setVisible(true);
		this.setExtendedState(JFrame.MAXIMIZED_BOTH);
		this.setDefaultCloseOperation(EXIT_ON_CLOSE);

		iniciateFrame();
	}

	/**
	 * Iiciate the JFrame.
	 */
	private void iniciateFrame() {

		// this.remove(prueba);
		this.setSize(SIZE_X, SIZE_Y);
		this.setResizable(false);
		this.setLocationRelativeTo(null);
		this.setIconImage((new ImageIcon(DataProfileManager.LOGO_MIN_PATH).getImage()));
		this.setTitle(TITLE_LABEL);
		this.setLayout(new BorderLayout());
		this.add(botP, BorderLayout.SOUTH);
		this.add(topP, BorderLayout.NORTH);
		this.add(sCenterP, BorderLayout.CENTER);

		this.setVisible(true);
		this.setExtendedState(JFrame.MAXIMIZED_BOTH);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.validate();
		this.repaint();
	}

	public static void start() {
		new NinjaFrame();
	}

	public static void main(String[] args) {
		if (DataProfileManager.isInstalled()) {
			start();
		} else {
			new ProfileFrame();
		}

	}

	/**
	 * Shows a new JFrame with the prifile info
	 */
	public void showProfile() {
		profile.setVisible(true);
	}
	
	public void addMouseListener(Component c){
		c.addMouseListener(new MouseListener(){

			@Override
			public void mouseClicked(MouseEvent arg0) {
		
			}

			@Override
			public void mouseEntered(MouseEvent arg0) {
				setCursor(NinjaFrame.handCursor);
			}

			@Override
			public void mouseExited(MouseEvent arg0) {
				setCursor(NinjaFrame.defaultCursor);
			}

			@Override
			public void mousePressed(MouseEvent arg0) {
	
			}

			@Override
			public void mouseReleased(MouseEvent arg0) {
	
			}
			
		});
	}
	

}
