package common;

import homePage.SearchResultPage;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;

import profilePage.DataProfileManager;
import properties.PropertiesManager;
import main.NinjaFrame;

public class TopInfoPanel extends JPanel {

	private static final String USER_LABEL = "usuario";

	private JLabel icon, user;
	private SearchResultPage searchPage;

	/**
	 * Method constructor
	 * 
	 * @param sp
	 *            ,my parent used to link
	 * @param searchPage
	 *            , my Frame Parent, used to link
	 */
	public TopInfoPanel(SearchResultPage searchPage) {

		this.searchPage = searchPage;
		this.setLayout(new BorderLayout());

		JPanel p1 = new JPanel();
		JPanel p2 = new JPanel();

		icon = new JLabel(new ImageIcon(DataProfileManager.LOGO_PATH));
		p1.add(icon, BorderLayout.EAST);

		user = new JLabel(USER_LABEL);
		JLabel hello = new JLabel(
				PropertiesManager
						.getProperties(PropertiesManager.TIP_WELCOME_LABEL));

		p2.add(hello);
		p2.add(user);

		this.add(p1, BorderLayout.WEST);
		this.add(p2, BorderLayout.EAST);

		addListeners();

	}

	/**
	 * Set the listeners to the labels "logo", and "user"
	 */
	private void addListeners() {

		icon.addMouseListener(new MouseListener() {

			public void mouseClicked(MouseEvent arg0) {
				searchPage.goToHome();
			}

			@Override
			public void mouseEntered(MouseEvent arg0) {
				setCursor(NinjaFrame.handCursor);
			}

			@Override
			public void mouseExited(MouseEvent arg0) {
				setCursor(NinjaFrame.defaultCursor);
			}

			@Override
			public void mousePressed(MouseEvent arg0) {
			}

			@Override
			public void mouseReleased(MouseEvent arg0) {
			}

		});

		user.addMouseListener(new MouseListener() {

			public void mouseClicked(MouseEvent arg0) {
				searchPage.goToShop();
			}

			@Override
			public void mouseEntered(MouseEvent arg0) {
				setCursor(NinjaFrame.handCursor);
				user.setForeground(Color.BLUE);
			}

			@Override
			public void mouseExited(MouseEvent arg0) {
				setCursor(NinjaFrame.defaultCursor);
				user.setForeground(null);
			}

			@Override
			public void mousePressed(MouseEvent arg0) {
			}

			@Override
			public void mouseReleased(MouseEvent arg0) {
			}

		});
	}
}
