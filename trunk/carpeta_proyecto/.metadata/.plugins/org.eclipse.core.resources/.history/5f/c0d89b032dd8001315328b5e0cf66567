package mailConfig;

import java.util.Date;
import java.util.Properties;

import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.JOptionPane;

public class SendMail extends Object {
	private static final Object ENVIO_CORRECTO = "Mensaje enviado correctamente";

	private static final String TEXT_MAIL = "Pedido realizado correctamente. Se adjunta la orden de pedido.";
	private static final String OUR_PASS = "sake1234";
	public static final String OUR_MAIL = "ninjaswsake@gmail.com";
	public static final String THEIR_MAIL = "coctailfactory@gmail.com";
	private static final String TRUE = "true";
	private static final String FALSE = "false";
	private static final String MAIL_FALLBACK = "mail.smtp.socketFactory.fallback";
	private static final String JAVAX_SOCKET = "javax.net.ssl.SSLSocketFactory";
	private static final String MAIL_SOCKET_CLASS = "mail.smtp.socketFactory.class";
	private static final String MAIL_SOCKET_PORT = "mail.smtp.socketFactory.port";
	private static final String MAIL_PORT = "mail.smtp.port";
	private static final String MAIL_ENABLE = "mail.smtp.starttls.enable";
	private static final String MAIL_DEBUG = "mail.debug";
	private static final String MAIL_AUTH = "mail.smtp.auth";
	private static final String MAIL_HOST = "mail.smtp.host";
	private static final String PORT_NUM = "465";
	private static final String SUBJECT_MAIL = "Proyecto Sake Pedido nº ";
	private static final String GMAIL_SMTP = "smtp.gmail.com";
	private static final Object ERROR_ENVIO = "Envio fallido";


	

	public static Properties getProperties() {
		Properties props = new Properties();
		props.put(MAIL_HOST, GMAIL_SMTP);
		props.put(MAIL_AUTH, TRUE);
		props.put(MAIL_DEBUG, TRUE);
		props.put(MAIL_ENABLE, TRUE);
		props.put(MAIL_PORT, PORT_NUM);
		props.put(MAIL_SOCKET_PORT, PORT_NUM);
		props.put(MAIL_SOCKET_CLASS, JAVAX_SOCKET);
		props.put(MAIL_FALLBACK, FALSE);
		props.setProperty("mail.imap.partialfetch", "false");
		return props;
	}

	public static void sendMail(String mailTo, String fileNametoAttach,
			String nPedido) {
		// mailTo = "ramonmoxo@gmail.com";
		Session mailSession = Session.getInstance(SendMail.getProperties(),
				new javax.mail.Authenticator() {

					protected PasswordAuthentication getPasswordAuthentication() {
						return new PasswordAuthentication(OUR_MAIL, OUR_PASS);
					}
				});
		try {
			mailSession.setDebug(true); // Enable the debug mode

			Message msg = new MimeMessage(mailSession);

			// --[ Set the FROM, TO, DATE and SUBJECT fields
			msg.setFrom(new InternetAddress(OUR_MAIL));
			msg.setRecipients(Message.RecipientType.TO,
					InternetAddress.parse(mailTo));
			msg.setSentDate(new Date());
			msg.setSubject(SUBJECT_MAIL + nPedido);

			// --[ Create the body of the mail

			FileDataSource source = new FileDataSource(fileNametoAttach);
			msg.setDataHandler(new DataHandler(source));
			msg.setFileName(source.getFile().getName());
			msg.setText(TEXT_MAIL);
			
			
			// --[ Ask the Transport class to send our mail message
			Transport.send(msg);
			JOptionPane.showMessageDialog(null,
					ENVIO_CORRECTO);
		} catch (Exception E) {
			JOptionPane.showMessageDialog(null,
					ERROR_ENVIO);
			E.printStackTrace();
		}

	}
	
	public static void main(String[] args){
		String path = "C://Users//ramon//Desktop//1.pdf";
		sendMail("ramonmoxo@gmail.com", path,""+1241);
	}

	public static void sendBodyMail(String mailFrom, String subject,
			String body) {
		
		Session mailSession = Session.getInstance(SendMail.getProperties(),
				new javax.mail.Authenticator() {

					protected PasswordAuthentication getPasswordAuthentication() {
						return new PasswordAuthentication(OUR_MAIL, OUR_PASS);
					}
				});
		try {
			mailSession.setDebug(true); // Enable the debug mode

			Message msg = new MimeMessage(mailSession);

			// --[ Set the FROM, TO, DATE and SUBJECT fields
			msg.setFrom(new InternetAddress(mailFrom));
			msg.setRecipients(Message.RecipientType.TO,
					InternetAddress.parse(OUR_MAIL));
			msg.setSentDate(new Date());
			msg.setSubject(subject);

			// --[ Create the body of the mail

			msg.setText(body);
			// --[ Ask the Transport class to send our mail message
			Transport.send(msg);
			JOptionPane.showMessageDialog(null,
					ENVIO_CORRECTO);
		} catch (Exception E) {
			JOptionPane.showMessageDialog(null,
					ERROR_ENVIO);
			E.printStackTrace();
		}

	}

}
